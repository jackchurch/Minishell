-------- No backslash and no open quotes --------
Look for redirection operators before remving quotes and this means don't make tokens without quotes. 


If var can't expand, it disappears
echo a$HO"ME" will print aME

A token is seperated by spaces unles space is inside quotes. 
-> becomes ->
A token is sepearated by quotes, spaces outside the quotes become tokens aswell.  

ft_strdup will only work on small strings. It can't help split the user input string. 


int pointer array usage:
	int main(void){

		int *a = (int *)malloc(sizeof(int));

		a[0] = 3;
		a[1] = 6;

		printf("a[0] is = %d\n", a[0]);
		printf("a[1] is = %d\n", a[1]);
		printf("\n\n");

		while (*a)
		{
			printf("a pointer is %d\n", *a);
			a++;
		}
		return 0;
	}


Int pointer array usage from struct:
	typedef struct s_data {
		int *a;
	} t_data;

	size_t	ft_strlen(const char *str)
	{
		size_t	i;

		i = 0;
		while (str[i])
			i++;
		return (i);
	}
